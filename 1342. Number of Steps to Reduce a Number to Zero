//LeetCode 1342. Number of Steps to Reduce a Number to Zero

//Approach 1 : Recursive
//TC : O(log n)
//SC : O(log n)
class Solution {
    public int numberOfSteps(int num) {
        return helper(num , 0);
    }

    private int helper(int num, int steps){
        if(num == 0){
            return steps;
        }
        if(num % 2 == 0){
            return helper(num/2 , steps + 1);
        }
        return helper(num-1, steps + 1);
    }
}

//Approach 2 : Iterative
//TC : O(log n)
//SC : O(1)
class Solution {
    public int numberOfSteps(int num) {
        int steps = 0;
        if (num == 0) {
            return steps;
        }

        while (num != 0) {
            if (num % 2 == 0) {
                num = num / 2;
                steps++;
            }

            if (num % 2 != 0) {
                num = num - 1;
                steps++;
            }
        }
        return steps;

    }
}
