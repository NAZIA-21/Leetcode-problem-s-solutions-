//LeetCode 21. Merge Two Sorted Lists

//Solution 1:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1==null || list2==null){
            return list1==null? list2: list1;
        }
        
        if(list1.val> list2.val){
            ListNode temp= list1;
            list1= list2;
            list2= temp;
        }

        list1.next= mergeTwoLists(list1.next, list2);
        return list1;
   }
}



//Solution 2:
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {

        ListNode dummy= new ListNode();
        ListNode curr= dummy;

        while(list1 != null && list2 != null){
            if(list1.val <= list2.val){
                curr.next= list1;
                list1= list1.next;
            } else{
                curr.next= list2;
                list2= list2.next;
            }
            curr= curr.next;
        }

        //if any one of the linked list end 
        curr.next = (list1== null)? list2 : list1;

        return dummy.next;

        
    }
}
