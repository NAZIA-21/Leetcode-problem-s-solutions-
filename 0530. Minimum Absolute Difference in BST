//LeetCode 530. Minimum Absolute Difference in BST

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int minDiff;
    private int prev;

    public int getMinimumDifference(TreeNode root) {
        minDiff= Integer.MAX_VALUE;
        prev= Integer.MAX_VALUE;
        minAbsdiff(root);
        return minDiff;
    }

    public void minAbsdiff(TreeNode node){
        if(node == null) return;

        minAbsdiff(node.left);

        if(prev != Integer.MAX_VALUE){
            minDiff= Math.min(minDiff , Math.abs(node.val - prev));
        }
        prev = node.val;
        minAbsdiff(node.right);
    }
}
