//LeetCode 41. First Missing Positive
//Approach 1:
class Solution {
    public int firstMissingPositive(int[] nums) {
        Arrays.sort(nums);

        int missing= 1;
        for(int num : nums){
            if(num > 0){
                if(num == missing){
                    missing += 1;
                } else if(num > missing){
                    break;
                }
            }
        }
        return missing;  
    }
}

//Approach 2:
class Solution {
    public int firstMissingPositive(int[] nums) {
        int n=nums.length;
        
        for(int i=0; i<n; i++){
            while(nums[i] > 0 && nums[i] <= n && nums[nums[i] - 1]!= nums[i]){
                int temp= nums[nums[i] -1];
                 nums[nums[i] -1] = nums[i];
                 nums[i] = temp;
            }
        }

        for(int i=0; i<n; i++){
            if(nums[i] != i+1){
                return i+1;
            }
        }
        return n+1;
    }
}
