//LeetCode 637. Average of Levels in Binary Tree
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> averages= new ArrayList<>();
        Deque<TreeNode> queue= new ArrayDeque<>();
        queue.offer(root);

        while(!queue.isEmpty()){

            int levelSize= queue.size();
            long sum=0;

            for(int i=0; i<levelSize; i++){
                TreeNode currNode= queue.pollFirst();
                sum += currNode.val;

                if(currNode.left != null) {
                    queue.offer(currNode.left);
                }

                 if(currNode.right != null) {
                    queue.offer(currNode.right);
                }
            }
            averages.add((double) sum/levelSize);
        }
        return averages;
    }
}
