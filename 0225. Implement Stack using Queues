//LeetCode 225. Implement Stack using Queues
//1.using two queues
class MyStack {

    public Deque<Integer> auxQ = new ArrayDeque<>();
    public Deque<Integer> mainQ= new ArrayDeque<>();

    
    public void push(int x) {
       auxQ.offer(x);
       while(!mainQ.isEmpty()){
        auxQ.offer(mainQ.poll());
       }
       //swapping 
       Deque<Integer> temp= mainQ;
       mainQ= auxQ;
       auxQ= temp;
    }
    
    public int pop() {
        return mainQ.poll();
    }
    
    public int top() {
        return mainQ.peek();
    }
    
    public boolean empty() {
        return mainQ.isEmpty();
    }
}

//2. using single queue
class MyStack {

    public Queue<Integer> q = new ArrayDeque<>();
    
    public void push(int x) {
        q.offer(x);
        for(int i=0; i<q.size()-1; i++)
        q.offer(q.poll());
        
    }
    
    public int pop() {
        return q.poll();
        
    }
    
    public int top() {
        return q.peek();
        
    }
    
    public boolean empty() {
        return q.isEmpty();
        
    }
}

