//LeetCode 678. Valid Parenthesis String
//Approach 1: Using stack
class Solution {
    public boolean checkValidString(String s) {
        Stack<Integer> left = new Stack<>();
        Stack<Integer> star = new Stack<>();

        for(int i=0; i<s.length(); i++){
            if(s.charAt(i)=='(') left.push(i);
            else if(s.charAt(i) == '*') star.push(i);
            else{
                if(!left.isEmpty()) left.pop();
                else if(!star.isEmpty()) star.pop();
                else return false;
            }
        }

        while(left.size()!= 0){
            if(star.size()==0) return false;

            if(star.peek() > left.peek()){
                star.pop();
                left.pop();
            } else{
                return false;
            }
        }
        return true;
    }
}

//Appraoch 2: using dynamic programming
class Solution {
    public boolean checkValidString(String s) {
       int balance= 0;
       
       //left to right
       for(int i=0; i< s.length(); i++){
        if(s.charAt(i) != ')') balance++;

        else if(balance > 0) balance--;

        else return false;
       }
       
       balance =0;
       //right to left
       for(int i=s.length()-1; i>=0 ; i--){
        if(s.charAt(i) != '(') balance++;

        else if(balance > 0) balance --;

        else return false;
       }

        return true;
    }
}
